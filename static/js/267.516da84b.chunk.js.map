{"version":3,"file":"static/js/267.516da84b.chunk.js","mappings":"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","sources":["components/Icon/Icon.tsx","components/Layout/ContentWrapper.tsx","components/Footer/Footer.tsx","components/LocaleSwitcher/useLocaleSwitcher.ts","components/LocaleSwitcher/utils.ts","components/LocaleSwitcher/LocaleSwitcher.tsx","components/Navbar/NavbarItem.tsx","components/Navbar/useNavBar.ts","components/Navbar/Navbar.tsx","components/Header/Header.tsx","components/Header/useHeader.ts","components/Layout/Layout.tsx","components/Typography/H1.tsx","components/Typography/H2.tsx","components/TechStack/TechStack.tsx","components/TechStack/useTechStack.ts","components/ExpandableCard/ExpandableCard.tsx","components/ExpandableCard/useExpandableCard.ts","components/WorkList/WorkListItem/WorkListItemContent.tsx","components/WorkList/WorkListItem/WorkListItemTitle.tsx","components/WorkList/WorkListItem/WorkListItem.tsx","components/WorkList/WorkListColumn.tsx","components/WorkList/WorkList.tsx","components/WorkList/useWorkList.ts","routes/Experience.tsx"],"sourcesContent":["import React, { AriaAttributes } from \"react\";\nimport * as FeatherIcons from \"react-feather\";\nimport { IconNameList } from \"../../types\";\n\nexport interface IconProps extends AriaAttributes {\n  className?: string;\n  name: IconNameList;\n}\n\nconst Icon = ({ name, ...props }: IconProps) => {\n  const FeatherIcon = FeatherIcons[name];\n\n  return <FeatherIcon {...props} />;\n};\n\nexport default Icon;\n","import React, { PropsWithChildren } from \"react\";\nimport classnames from \"classnames\";\n\nexport interface ContentWrapperProps {\n  isHome?: boolean;\n}\n\nconst ContentWrapper = ({ children, isHome }: PropsWithChildren<ContentWrapperProps>) => {\n  return (\n    <main className=\"flex flex-1 px-6 md:px-3 mt-[100px] md:mt-[104px] lg:mt-[52px] justify-center\">\n      <div className={classnames(\n        \"flex flex-col flex-1 justify-center md:max-w-[75%]\",\n        isHome ? \"gap-2\" : \"mt-8 lg:mt-0 items-center md:items-start\"\n      )}>\n        {children}\n      </div>\n    </main>\n  );\n};\n\nexport default ContentWrapper;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Footer = () => {\n  const { i18n } = useTranslation();\n  const year = (new Date()).getFullYear();\n  const text = i18n.t(\"globals.footer.copyright\", { returnObjects: true, year }) as string[];\n\n  return (\n    <footer className=\"mt-10 p-3 flex flex-col md:flex-row items-center md:justify-end\">\n      {text.map((str, index) => (\n        <span key={index}>{str}&nbsp;</span>\n      ))}\n    </footer>\n  );\n};\n\nexport default Footer;\n","import { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { getPath } from \"./utils\";\nimport { LOCALE, LOCALE_REGEX } from \"../../constants\";\n\nexport const useLocaleSwitcher = () => {\n  const { i18n } = useTranslation();\n  const { pathname, search } = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const regExpExecArray = LOCALE_REGEX.exec(pathname);\n    const locale = regExpExecArray && regExpExecArray[1] ? regExpExecArray[1] : LOCALE.EN;\n\n    i18n.changeLanguage(locale).catch();\n  }, [pathname]);\n\n  const toggleLocale = () => {\n    navigate(getPath(pathname, i18n.language === LOCALE.EN ? LOCALE.FR : LOCALE.EN, search));\n  };\n\n  return { toggleLocale };\n};","import { LOCALE, LOCALE_REGEX } from \"../../constants\";\n\nexport const getPath = (pathname: string, locale: string, search?: string) => {\n  switch (pathname) {\n    case \"/\":\n    case `/${LOCALE.EN}`:\n      return `/${LOCALE.FR}`;\n    case `/${LOCALE.FR}`:\n      return `/${LOCALE.EN}`;\n    default:\n      return pathname !== \"/\" ? `${pathname.replace(LOCALE_REGEX, `/${locale}`)}${search}` : \"\";\n  }\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { useTranslation } from \"react-i18next\";\nimport { useLocaleSwitcher } from \"./useLocaleSwitcher\";\n\ninterface LocaleSwitcherProps {\n  className?: string;\n}\n\nconst LocaleSwitcher = ({ className }: LocaleSwitcherProps) => {\n  const { i18n } = useTranslation();\n  const { toggleLocale } = useLocaleSwitcher();\n\n  return (\n    <button\n      className={classnames(\"bg-none border-none cursor-pointer font-semibold text-lg\", className)}\n      onClick={toggleLocale}\n    >\n      {i18n.t(\"globals.changeLocale\")}\n    </button>\n  );\n};\n\nexport default LocaleSwitcher;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport classnames from \"classnames\";;\nimport Icon from \"../Icon\";\nimport type { IconNameList } from \"../../types\";\n\ninterface NavBarItemProps {\n  href: string;\n  icon: IconNameList;\n  isActive?: boolean;\n  label: string;\n}\n\nexport default function NavBarItem({ href, icon, isActive, label }: NavBarItemProps) {\n  return (\n    <li>\n      <NavLink\n        className={classnames(\n          \"flex gap-1 text-lg border-b border-b-solid hover:border-b-white\",\n          isActive ? \"font-semibold border-b-white\" : \"border-b-transparent\"\n        )}\n        to={href}\n      >\n        <Icon aria-label={label} className=\"mb-2 md:hidden\" name={icon} />\n        <span className=\"hidden md:inline\">\n          {label}\n        </span>\n      </NavLink>\n    </li>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\n\nimport type { NavItem } from \"./types\";\n\nexport const useNabBar = () => {\n  const { pathname } = useLocation();\n  const { i18n } = useTranslation();\n  const locale = i18n.language;\n  const navItems: NavItem[] = [\n    { href: `/${locale}`, icon: \"Home\", label: i18n.t(\"globals.nav.home\") },\n    { href: `/${locale}/about`, icon: \"User\", label: i18n.t(\"globals.nav.about\") },\n    { href: `/${locale}/experience`, icon: \"Code\", label: i18n.t(\"globals.nav.experience\") },\n    { href: `/${locale}/contact`, icon: \"MessageSquare\", label: i18n.t(\"globals.nav.contact\") },\n  ];\n\n  return {\n    locale,\n    navItems,\n    pathname,\n  };\n};","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport NavBarItem from \"./NavbarItem\";\nimport { useNabBar } from \"./useNavBar\";\n\ninterface NavbarProps {\n  className?: string;\n}\n\nconst Navbar = ({ className }: NavbarProps) => {\n  const { locale, navItems, pathname } = useNabBar();\n\n  return (\n    <nav className={classnames(\"flex-1\", className)}>\n      <ul className=\"flex gap-5 items-center justify-around md:justify-start\">\n        {navItems.map(item =>\n          <NavBarItem\n            {...item}\n            key={item.href}\n            isActive={item.href === pathname || (pathname === \"/\" && item.href === `/${locale}`)}\n          />\n        )}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { H2 } from \"../Typography\";\nimport LocaleSwitcher from \"../LocaleSwitcher\";\nimport Navbar from \"../Navbar\";\n\nimport { useHeader } from \"./useHeader\";\n\nconst Header = () => {\n  const { i18n } = useTranslation();\n  const { isTransparent } = useHeader();\n\n  return (\n    <header\n      className={classnames(\n        \"fixed w-full flex gap-6 items-center py-3 px-6 md:px-3 flex-wrap justify-between\",\n        isTransparent ? \"bg-transparent\" : \"bg-gray-700\"\n      )}\n    >\n      <H2 className=\"!mb-0\">{i18n.t(\"globals.title\")}</H2>\n      <Navbar className=\"basis-full lg:basis-auto order-3 lg:order-2\" />\n      <LocaleSwitcher className=\"order-2 lg:order-3\" />\n    </header>\n  );\n};\n\nexport default Header;\n","import { useEffect, useState } from \"react\";\n\nexport const useHeader = () => {\n  const [isTransparent, setIsTransparent] = useState(true);\n\n  const setTransparency = () => setIsTransparent(window.scrollY < 50);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", setTransparency);\n\n    return () => {\n      window.removeEventListener(\"scroll\", setTransparency);\n    };\n  }, []);\n\n  return { isTransparent };\n};\n","import React, { PropsWithChildren } from \"react\";\nimport classnames from \"classnames\";\n\nimport ContentWrapper, { ContentWrapperProps } from \"./ContentWrapper\";\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\n\ninterface LayoutProps extends ContentWrapperProps {\n  backgroundClass?: string;\n}\n\nconst Layout = ({ backgroundClass, children, ...props }: PropsWithChildren<LayoutProps>) => {\n  return (\n    <div className={classnames(\n      \"flex flex-col w-full min-h-screen\",\n      \"before:content-[''] before:fixed before:left-0 before:right-0 before:z-[-1] before:block before:h-full\",\n      \"before:w-full, before:blur-sm before:brightness-50 before:bg-no-repeat before:bg-cover\",\n      backgroundClass\n    )}>\n      <Header />\n      <ContentWrapper {...props}>\n        {children}\n      </ContentWrapper>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport type { TypographyProps } from \"./types\";\n\nconst H1 = ({ children, className }: TypographyProps) => (\n  <h1 className={classnames(\"text-6xl font-bold mb-8\", className)}>{children}</h1>\n);\n\nexport default H1;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport type { TypographyProps } from \"./types\";\n\nconst H2 = ({ children, className }: TypographyProps) => (\n  <h2 className={classnames(\"font-semibold text-xl mb-2\", className)}>{children}</h2>\n);\n\nexport default H2;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { H2 } from \"../../components/Typography\";\nimport { useTechStack } from \"./useTechStack\";\n\nconst TechStack = () => {\n  const { i18n } = useTranslation();\n  const { stackList } = useTechStack();\n\n  return (\n    <div>\n      <H2>{i18n.t(\"experience.stack.title\")}</H2>\n      <ul className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4\">\n        {stackList.map(item => <li key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default TechStack;\n","import { useTranslation } from \"react-i18next\";\n\nexport const useTechStack = () => {\n  const { i18n } = useTranslation();\n  const stackList = i18n.t(\"experience.stack.list\", { returnObjects: true }) as string[];\n\n  return { stackList };\n};\n","import React, { ReactNode } from \"react\";\nimport classnames from \"classnames\";\nimport { ChevronDown, ChevronUp } from \"react-feather\";\n\nimport { useExpandableCard } from \"./useExpandableCard\";\n\ninterface ExpandableCardProps {\n  content: ReactNode;\n  expandedByDefault?: boolean;\n  title: ReactNode;\n}\n\nconst ExpandableCard = ({ content, expandedByDefault = false, title }: ExpandableCardProps) => {\n  const { isExpanded, handleOnKeyboard, toggleIsExpanded } = useExpandableCard(expandedByDefault);\n\n  return (\n    <div\n      className=\"cursor-pointer w-full p-4 bg-opacity-20 bg-black h-fit\"\n      onClick={toggleIsExpanded}\n      onKeyDown={handleOnKeyboard}\n      tabIndex={0}\n    >\n      <div className=\"flex justify-between gap-3\">\n        {title}\n        {isExpanded ? <ChevronUp /> : <ChevronDown />}\n      </div>\n\n      <div\n        aria-expanded={isExpanded}\n        className={classnames(\"grid grid-rows-[0fr]\", { \"grid-rows-[1fr]\": isExpanded })}\n        style={{ transition: \"grid-template-rows 0.5s ease-out\" }}\n      >\n        <div className=\"overflow-hidden\">{content}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpandableCard;\n","import { KeyboardEvent, useState } from \"react\";\n\nexport const useExpandableCard = (expandedByDefault: boolean) => {\n  const [isExpanded, setIsExpanded] = useState(expandedByDefault);\n  const toggleIsExpanded = () => setIsExpanded(isExpanded => !isExpanded);\n  const handleOnKeyboard = (event: KeyboardEvent<HTMLDivElement>) => {\n    if ([\"Enter\", \"Space\"].includes(event.code)) {\n      event.preventDefault();\n      toggleIsExpanded();\n    }\n  };\n\n  return { isExpanded, handleOnKeyboard, toggleIsExpanded };\n};\n","import React from \"react\";\nimport type { Work } from \"../types\";\n\ntype WorkListItemContentProps = Pick<Work, \"tasks\">;\n\nconst WorkListItemContent = ({ tasks }: WorkListItemContentProps) => {\n  return (\n    <ul className=\"list-disc ml-6\">\n      {tasks.map(task => <li key={task}>{task}</li>)}\n    </ul>\n  );\n};\n\nexport default WorkListItemContent;\n","import React from \"react\";\nimport type { Work } from \"../types\";\n\ntype WorkListItemTitleProps = Omit<Work, \"tasks\">;\n\nconst WorkListItemTitle = ({ location, timeframe, title }: WorkListItemTitleProps) => {\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex justify-between\">\n        <p>{title}</p>\n        {timeframe && <p className=\"flex-shrink-0\">{timeframe}</p>}\n      </div>\n      {location && <p>{location}</p>}\n    </div>\n  );\n};\n\nexport default WorkListItemTitle;\n","import React from \"react\";\n\nimport ExpandableCard from \"../../ExpandableCard\";\nimport WorkListItemContent from \"./WorkListItemContent\";\nimport WorkListItemTitle from \"./WorkListItemTitle\";\n\nimport type { Work } from \"../types\";\n\ntype WorkListItemProps = Work;\n\nconst WorkListItem = ({ tasks, ...titleProps }: WorkListItemProps) => {\n  return (\n    <ExpandableCard\n      content={<WorkListItemContent tasks={tasks} />}\n      title={<WorkListItemTitle {...titleProps} />}\n    />\n  );\n};\n\nexport default WorkListItem;\n","import React from \"react\";\n\nimport WorkListItem from \"./WorkListItem\";\n\nimport type { Work } from \"./types\";\n\ninterface WorkListColumnProps {\n  workList: Work[];\n}\n\nconst WorkListColumn = ({ workList }: WorkListColumnProps) => {\n  return (\n    <div className=\"flex flex-col gap-4\">\n      {workList.map(item => <WorkListItem key={`${item.title}-${item.location}`} {...item} />)}\n    </div>\n  );\n};\n\nexport default WorkListColumn;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { H2 } from \"../Typography\";\nimport WorkListColumn from \"./WorkListColumn\";\nimport { useWorkList } from \"./useWorkList\";\n\nconst WorkList = () => {\n  const { i18n } = useTranslation();\n  const { worklists } = useWorkList();\n\n  return (\n    <div>\n      <H2>{i18n.t(\"experience.work.title\")}</H2>\n      <div className=\"w-full flex-wrap gap-4 grid md:grid-cols-2 \">\n        {worklists.map((workList, index) => <WorkListColumn key={index} workList={workList} />)}\n      </div>\n    </div>\n  );\n};\n\nexport default WorkList;\n","import { useTranslation } from \"react-i18next\";\n\nimport type { Work } from \"./types\";\n\nexport const useWorkList = () => {\n  const { i18n } = useTranslation();\n  const workList = i18n.t(\"experience.work.list\", { returnObjects: true }) as Work[];\n  const index = Math.round(workList.length / 2);\n  const worklists = [workList.slice(0, index), workList.slice(index)];\n\n  return { worklists };\n};\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nimport { H1 } from \"../components/Typography\";\nimport Layout from \"../components/Layout\";\nimport TechStack from \"../components/TechStack\";\nimport WorkList from \"../components/WorkList\";\n\nexport default function Experience() {\n  const { i18n } = useTranslation();\n\n  return (\n    <Layout backgroundClass=\"before:bg-sunset\">\n      <div className=\"flex flex-col gap-6\">\n        <div>\n          <H1>{i18n.t(\"experience.title\")}</H1>\n          <p>{i18n.t(\"experience.description\")}</p>\n        </div>\n        <TechStack />\n        <WorkList />\n      </div>\n    </Layout>\n  );\n}\n"],"names":["name","props","FeatherIcon","FeatherIcons","children","isHome","className","classnames","i18n","useTranslation","year","Date","getFullYear","text","t","returnObjects","map","str","index","useLocaleSwitcher","useLocation","pathname","search","navigate","useNavigate","useEffect","regExpExecArray","LOCALE_REGEX","locale","LOCALE","changeLanguage","catch","toggleLocale","replace","getPath","language","onClick","NavBarItem","href","icon","isActive","label","to","Icon","navItems","useNabBar","item","key","useState","isTransparent","setIsTransparent","setTransparency","window","scrollY","addEventListener","removeEventListener","useHeader","H2","backgroundClass","stackList","content","expandedByDefault","title","isExpanded","setIsExpanded","toggleIsExpanded","handleOnKeyboard","event","includes","code","preventDefault","useExpandableCard","onKeyDown","tabIndex","style","transition","tasks","task","location","timeframe","titleProps","workList","worklists","Math","round","length","slice","useWorkList","Experience","Layout","H1"],"sourceRoot":""}